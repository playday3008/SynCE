synce_kde_save_cflags="$CPPFLAGS"
synce_kde_save_ldflags="$LDFLAGS"

AC_MSG_CHECKING(if unique application check should be disabled)
AC_ARG_ENABLE(unique,
	[  --disable-unique        disable unique application check],
	[
		if test "$enableval" = yes; then
			AC_MSG_RESULT(no)
		else
  			AC_MSG_RESULT(yes)
			AC_DEFINE(NOTUNIQUE, 1, 
				[Define if disable unique application check])
		fi
	],
	[
		AC_MSG_RESULT(no)
	]
)

AC_ARG_WITH(libsynce, 
	AC_HELP_STRING(
			[--with-libsynce[=DIR]],
			[Search for libsynce in DIR/include and DIR/lib]),
	[
		SYNCE_INCLUDES="-I${withval}/include"
		SYNCE_LDFLAGS="-L${withval}/lib"
	]
)

AC_ARG_WITH(libsynce-include,
	AC_HELP_STRING(
			[--with-libsynce-include[=DIR]],
			[Search for libsynce header files in DIR]),
	[
		SYNCE_INCLUDES="-I${withval}"
	]
)

AC_ARG_WITH(libsynce-lib,
	AC_HELP_STRING(
			[--with-libsynce-lib[=DIR]],
			[Search for libsynce library files in DIR]),
	[
		SYNCE_LDFLAGS="-L${withval}"
	]
)
AC_SUBST(SYNCE_INCLUDE)
AC_SUBST(SYNCE_LDFLAGS)

LDFLAGS="$LDFLAGS $SYNCE_LDFLAGS"
AC_CHECK_LIB(synce, main,
	[
		SYNCE_LIB="-lsynce"
	],
	[
		AC_MSG_ERROR([Can't find synce library])
		exit
	]
)
AC_SUBST(SYNCE_LIB)

CPPFLAGS="$CPPFLAGS $SYNCE_INCLUDES"
AC_CHECK_HEADERS(synce.h,,
	[
		AC_MSG_ERROR([Can't find synce.h])
		exit
	]
)

AC_ARG_WITH(librapi2,
	AC_HELP_STRING(
			[--with-librapi2[=DIR]],
			[Search for librapi2 in DIR/include and DIR/lib]),
	[
		RAPI_INCLUDES="-I${withval}/include"
		RAPI_LDFLAGS="-L${withval}/lib"
	]
)

AC_ARG_WITH(librapi2-include,
	AC_HELP_STRING(
			[--with-librapi2-include[=DIR]],
			[Search for librapi2 header files in DIR]),
	[
		RAPI_INCLUDES="-I${withval}"
	]
)

AC_ARG_WITH(librapi2-lib,
	AC_HELP_STRING(
			[--with-librapi2-lib[=DIR]],
			[Search for librapi2 library files in DIR]),
	[
		RAPI_LDFLAGS="-L${withval}"
	]
)
AC_SUBST(RAPI_INCLUDE)
AC_SUBST(RAPI_LDFLAGS)

LDFLAGS="$LDFLAGS $RAPI_LDFLAGS"
AC_CHECK_LIB(rapi,CeRapiInit,
	[
		RAPI_LIB="-lrapi"
	],
	[
		AC_MSG_ERROR([Can't find RAPI library])
		exit
	],
	[
		$SYNCE_LIB
	]
)
AC_SUBST(RAPI_LIB)

CPPFLAGS="$CPPFLAGS $RAPI_INCLUDES"
AC_CHECK_HEADERS(rapi.h,,
	[
		AC_MSG_ERROR([Can't find rapi.h])
		exit
	]
)

CPPFLAGS="$synce_kde_save_cflags"
LDFLAGS="$synce_kde_save_ldflags"
unset synce_kde_save_cflags
unset synce_kde_save_ldflags
