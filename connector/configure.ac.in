AC_PREREQ(2.52)
AC_INIT(synce-connector, @@VERSION@@)
AC_CONFIG_HEADERS(config.h)
AC_CONFIG_SRCDIR(src/main.c)
AM_INIT_AUTOMAKE

AM_MAINTAINER_MODE
AC_PROG_MAKE_SET

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB

AC_DISABLE_STATIC
AC_PROG_LIBTOOL

dnl Find the path to network tools
AC_PATH_PROG([DHCLIENTPATH], [dhclient], [no])
if test "x$DHCLIENTPATH" = "xno"; then
   AC_MSG_ERROR([Failed to find dhclient in PATH, is it installed ?])
fi

AC_PATH_PROG([IFCONFIGPATH], [ifconfig], [no])
if test "x$IFCONFIGpath" = "xno"; then
   AC_MSG_ERROR([Failed to find ifconfig in PATH, is it installed ?])
fi

AC_PATH_PROG([PPPDPATH], [pppd], [/usr/sbin/pppd])

dnl Check for header files.
AC_STDC_HEADERS

dnl Check for Synce
PKG_CHECK_MODULES(SYNCE, [libsynce >= 0.10.0])

dnl Check for GLib
PKG_CHECK_MODULES(GLIB, [glib-2.0 >= 2.7, gobject-2.0 >= 2.4])

dnl Check for GNet
PKG_CHECK_MODULES(GNET, gnet-2.0)

dnl Check for D-Bus
PKG_CHECK_MODULES(DBUS, [dbus-1 >= 0.60, dbus-glib-1 >= 0.60])

dnl Check for earlier version of dbus-glib
PKG_CHECK_MODULES(DBUSGLIB074, [dbus-glib-1 >= 0.74], [early_dbusglib=no], [early_dbusglib=yes])
if test "x$early_dbusglib" = "xyes"; then
   AC_DEFINE_UNQUOTED([EARLY_DBUSGLIB], [1], [dbus-glib older than 0.74])
fi


# do we use hal or udev ?
AC_ARG_ENABLE(udev, AC_HELP_STRING([--enable-udev], [Build for udev]),enable_udev="$enableval",enable_udev=no)
AM_CONDITIONAL(USE_HAL, test "x$enable_udev" = "xno")
if test "x$enable_udev" = "xno"; then
    AC_DEFINE(USE_HAL, 1, [Build using hal])

    dnl Check for HAL
    PKG_CHECK_MODULES(HAL, hal)

    dnl Check for override of default hal addon dir
    AC_MSG_CHECKING([hal addon dir])
    AC_ARG_WITH(hal-addon-dir, [  --with-hal-addon-dir=PATH     Location of the hal addon scripts.],
	       with_hal_addon_dir="$withval", with_hal_addon_dir="no")
    if test "x${with_hal_addon_dir}" = "xno"; then
        hal_addon_dir="`pkg-config --variable=libdir hal`/hal/scripts"

        hald_test_output=`hald --daemon=no 2>&1 | grep 'allowed paths' | grep "$hal_addon_dir"`
        if test $? -ne 0
        then
            AC_MSG_ERROR([Automatically determined hal script location ${hal_addon_dir} not in allowed paths, use --with-hal-addon-dir])
        fi
        AC_MSG_RESULT([$hal_addon_dir])
    else
        hal_addon_dir="$with_hal_addon_dir"

        hald_test_output=`hald --daemon=no 2>&1 | grep 'allowed paths' | grep "$hal_addon_dir"`
        if test $? -ne 0
        then
            AC_MSG_WARN([Specified hal script location ${hal_addon_dir} not in allowed paths])
        else
            AC_MSG_RESULT([$hal_addon_dir])
        fi
    fi
    AC_SUBST(hal_addon_dir)
else
    PKG_CHECK_MODULES(GUDEV, gudev-1.0)

    dnl Check for override of default udev dir
    AC_MSG_CHECKING([udev dir])
    AC_ARG_WITH(udev-dir, [  --with-udev-dir=PATH     Location of the udev config.],
	       with_udev_dir="$withval", with_udev_dir="no")
    if test "x${with_udev_dir}" = "xno"; then
        udev_dir="`pkg-config --variable=udevdir udev`"
        AC_MSG_RESULT([$udev_dir])
    else
        udev_dir="$with_udev_dir"
        AC_MSG_RESULT([$udev_dir])
    fi
    AC_SUBST(udev_dir)
fi


AC_ARG_ENABLE(bluetooth-support, AC_HELP_STRING([--enable-bluetooth-support], [Build in bluetooth support]),enable_bluetooth_support="$enableval",enable_bluetooth_support=no)
AM_CONDITIONAL(ENABLE_BLUETOOTH_SUPPORT, test "x$enable_bluetooth_support" = "xyes")
if test "x$enable_bluetooth_support" = "xyes"; then
       AC_DEFINE(ENABLE_BLUETOOTH_SUPPORT, 1, [Building in bluetooth support])
fi


AS_AC_EXPAND(LIBEXECDIR, "$libexecdir")
AS_AC_EXPAND(SYSCONFDIR, "$sysconfdir")
AS_AC_EXPAND(LOCALSTATEDIR, "$localstatedir")
AS_AC_EXPAND(SYNCEDATADIR, "$datadir/${PACKAGE}")
AS_AC_EXPAND(UDEVDIR, "$udev_dir")

AC_CONFIG_FILES([
        scripts/synceconnector.py \
        scripts/hal-synce-rndis \
        scripts/hal-synce-serial \
        scripts/udev-synce-rndis \
        scripts/udev-synce-serial \
        scripts/synce-udev-rndis \
        scripts/synce-udev-serial \
        scripts/85-synce.rules \
        bluetooth/hal-synce-bluetooth \
        bluetooth/synce-bt-ipup \
        bluetooth/synce-bt-ipdown \
        etc/synce-connector.conf] )

AC_OUTPUT([
	Makefile
	scripts/Makefile
	src/Makefile
	etc/Makefile
	bluetooth/Makefile
])
