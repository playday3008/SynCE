#!/usr/bin/env python

import sys
import subprocess

sys.path.insert(0,"@DATADIR@/@PACKAGE_NAME@")
import synceconnector
from synceconnector import process_config, get_logger


def create_device(logger, device_ip, iface, device_file):

    udi = "synce_bluetooth_device_"+device_ip.replace(".","_")

    cmd_list = ["hal-device", "--add", udi]
    device_params = """\
        info.capabilities = {'serial', 'pda', 'sync'} (string list)
        info.category = 'pda'  (string)
        info.product = 'Pocket PC PDA'  (string)
        pda.platform = 'pocketpc'  (string)
        sync.engine = 'opensync'  (string)
        sync.plugin = 'synce'  (string)
        serial.device = '"""+device_file+"""'  (string)
        net.interface = '"""+iface+"""'  (string)
        info.addons = {'hal-synce-bluetooth'} (string list)\
        """

    logger.debug("creating bluetooth device in hal:")
    logger.debug(cmd_list)
    logger.debug(device_params)

    try:
        proc = subprocess.Popen(cmd_list, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        output_text = proc.communicate(input=device_params)[0]
    except Exception,e:
        logger.error("failure running hal-device: %s" % e)
        return False

    rc = proc.returncode

    if rc != 0:
        logger.error("failed to create bluetooth device in hal, return code %d, %s", (rc, output_text))
        return False

    return True


if __name__ == '__main__':

    logger = get_logger("synce-hal-bt-ipup")

    iface = sys.argv[1]
    devfile = sys.argv[2]
    speed = sys.argv[3]
    local_ip = sys.argv[4]
    device_ip = sys.argv[5]
    ipparam = sys.argv[6]

    if ipparam != "synce-bt":
        sys.exit(0)

    process_config()

    if create_device(logger, device_ip, iface, devfile) == False:
        sys.exit(1)

    sys.exit(0)
