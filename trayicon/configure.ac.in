dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.53)

AC_INIT(synce-trayicon, @@VERSION@@)
AC_CONFIG_HEADERS(config.h)
AC_CONFIG_SRCDIR(src/synce-trayicon.c)
AM_INIT_AUTOMAKE

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_DISABLE_STATIC
AC_PROG_LIBTOOL
AC_PROG_MAKE_SET
AM_PROG_CC_C_O

dnl Check for libsynce
PKG_CHECK_MODULES(LIBSYNCE, libsynce >= 0.16)
dnl Check for librra
PKG_CHECK_MODULES(LIBRRA, librra >= 0.14)

PKG_CHECK_MODULES(GTK2, glib-2.0       \
			gmodule-2.0    \
			gtk+-2.0 >= 2.16)

AC_SUBST(GTK2_CFLAGS)
AC_SUBST(GTK2_LIBS)

PKG_CHECK_MODULES(GCONF, gconf-2.0)

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

dnl Check for D-Bus
PKG_CHECK_MODULES(DBUS, [dbus-1 >= 0.61, dbus-glib-1 >= 0.61],
                    dbus=yes, dbus=no)

dnl Check for Gnome Keyring
PKG_CHECK_MODULES(GNOME_KEYRING, gnome-keyring-1)
AC_SUBST(GNOME_KEYRING_CFLAGS)
AC_SUBST(GNOME_KEYRING_LIBS)

PKG_CHECK_MODULES([NOTIFY], [libnotify >= 0.3.0])

dnl Check for liborange
PKG_CHECK_MODULES(LIBORANGE, liborange >= 0.3.2)

dnl Check for libxml
PKG_CHECK_MODULES(XML, libxml-2.0 >= 2.6.0)
AC_SUBST(XML_CFLAGS)
AC_SUBST(XML_LIBS)

dnl Check for libappindicator
APPINDICATOR_REQUIRED=0.0.7

AC_ARG_ENABLE(appindicator,
                        AS_HELP_STRING([--enable-appindicator[=@<:@no/auto/yes@:>@]],[Build support for application indicators ]),
                        [enable_appindicator=$enableval],
                        [enable_appindicator="auto"])

if test x$enable_appindicator = xauto ; then
        PKG_CHECK_EXISTS([appindicator-0.1 >= $APPINDICATOR_REQUIRED],
                         enable_appindicator="yes",
                         enable_appindicator="no")
fi

if test x$enable_appindicator = xyes ; then
        PKG_CHECK_EXISTS([appindicator-0.1 >= $APPINDICATOR_REQUIRED],,
                         AC_MSG_ERROR([appindicator-0.1 is not installed]))
        PKG_CHECK_MODULES(APP_INDICATOR,
                        appindicator-0.1 >= $APPINDICATOR_REQUIRED)
        AC_SUBST(APP_INDICATOR_CFLAGS)
        AC_SUBST(APP_INDICATOR_LIBS)
        AC_DEFINE(HAVE_APP_INDICATOR, 1, [Have AppIndicator])
fi
AM_CONDITIONAL(HAVE_APP_INDICATOR, test x"$enable_appindicator" = xyes)


dnl
dnl whether (v)dccm connection file support is required
dnl
AC_ARG_ENABLE(vdccm-support,
              [  --enable-vdccm-support  enable vdccm support],
              enable_vdccm_support=$enableval, enable_vdccm_support=no)

if ! test "$enable_vdccm_support" = "no"; then
  dnl Check for gtop
  PKG_CHECK_MODULES(GTOP, libgtop-2.0, gtop_found=yes, gtop_found=no)

  if test "$gtop_found" = "no"; then
    if test "$enable_vdccm_support" = "auto"; then
      AC_MSG_NOTICE([libgtop not found, building without vdccm support])
      enable_vdccm_support=no
    else
      AC_MSG_ERROR([vdccm support requested but libgtop could not be found])
    fi
  else
    AC_MSG_NOTICE([Building with vdccm support])
    AC_DEFINE(ENABLE_VDCCM_SUPPORT, 1, [Define if building with vdccm support])
    enable_vdccm_support=yes
  fi
else
  AC_MSG_NOTICE([Building without vdccm support])
fi
if test "$enable_vdccm_support" = "yes"; then vdccm=1; else vdccm=0; fi
AC_DEFINE_UNQUOTED(ENABLE_VDCCM_SUPPORT, $vdccm, [Define to 1 if you want vdccm support.])
AM_CONDITIONAL(ENABLE_VDCCM_SUPPORT, test "x$enable_vdccm_support" = "xyes")

dnl
dnl whether odccm dbus support is required
dnl
AC_ARG_ENABLE(odccm-support,
              [  --enable-odccm-support  enable odccm support (requires D-Bus)],
              enable_odccm_support=$enableval, enable_odccm_support=no)

if ! test "$enable_odccm_support" = "no"; then
  AC_MSG_NOTICE([Building with odccm support])
  AC_DEFINE(ENABLE_ODCCM_SUPPORT, 1, [Define if building with odccm support])
  enable_odccm_support=yes
else
  AC_MSG_NOTICE([Building without odccm support])
fi
if test "$enable_odccm_support" = "yes"; then odccm=1; else odccm=0; fi
AC_DEFINE_UNQUOTED(ENABLE_ODCCM_SUPPORT, $odccm, [Define to 1 if you want odccm support.])
AM_CONDITIONAL(ENABLE_ODCCM_SUPPORT, test "x$enable_odccm_support" = "xyes")

dnl
dnl whether hal dbus support is required
dnl
AC_ARG_ENABLE(hal-support,
              [  --enable-hal-support  enable hal support (requires D-Bus)],
              enable_hal_support=$enableval, enable_hal_support=no)

if ! test "$enable_hal_support" = "no"; then
  dnl Check for Hal
  PKG_CHECK_MODULES(HAL, hal, hal_found=yes, hal_found=no)

  if test "$hal_found" = "no"; then
    if test "$enable_hal_support" = "auto"; then
      AC_MSG_NOTICE([Hal not found, building without hal support])
      enable_hal_support=no
    else
      AC_MSG_ERROR([Hal support requested but hal could not be found])
    fi
  else
    AC_MSG_NOTICE([Building with hal support])
    AC_DEFINE(ENABLE_HAL_SUPPORT, 1, [Define if building with hal support])
    enable_hal_support=yes
  fi
else
  AC_MSG_NOTICE([Building without hal support])
fi

if test "$enable_hal_support" = "yes"; then hal=1; else hal=0; fi
AC_DEFINE_UNQUOTED(ENABLE_HAL_SUPPORT, $hal, [Define to 1 if you want hal support.])
AM_CONDITIONAL(ENABLE_HAL_SUPPORT, test "x$enable_hal_support" = "xyes")

dnl
dnl whether dbus support for udev is required
dnl
AC_ARG_ENABLE(udev-support,
              [  --enable-udev-support  enable udev support (requires D-Bus)],
              enable_udev_support=$enableval, enable_udev_support=yes)

if ! test "$enable_udev_support" = "no"; then
  AC_MSG_NOTICE([Building with udev support])
  AC_DEFINE(ENABLE_UDEV_SUPPORT, 1, [Define if building with udev support])
  enable_udev_support=yes
else
  AC_MSG_NOTICE([Building without udev support])
fi
if test "$enable_udev_support" = "yes"; then udev=1; else udev=0; fi
AC_DEFINE_UNQUOTED(ENABLE_UDEV_SUPPORT, $udev, [Define to 1 if you want udev support.])
AM_CONDITIONAL(ENABLE_UDEV_SUPPORT, test "x$enable_udev_support" = "xyes")


dnl Checks for header files.

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

ALL_LINGUAS="sv ru"

GETTEXT_PACKAGE=AC_PACKAGE_NAME
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [foo])

AM_GLIB_GNU_GETTEXT
AC_PROG_INTLTOOL

if test "x${prefix}" = "xNONE"; then
	AC_DEFINE_UNQUOTED(LOCALEDIR, "${ac_default_prefix}/${DATADIRNAME}/locale", [Locale dir])
else
	AC_DEFINE_UNQUOTED(LOCALEDIR, "${prefix}/${DATADIRNAME}/locale", [Locale dir])
fi

AS_AC_EXPAND(BINDIR, $bindir)
AS_AC_EXPAND(TRAYICON_MOD_DIR, "$libdir/synce-trayicon/modules")

AC_OUTPUT([
	Makefile
	src/Makefile
	pixmaps/Makefile
	pixmaps/22x22/Makefile
	pixmaps/48x48/Makefile
	data/Makefile
	data/synce-trayicon.desktop.in
	data/synce-trayicon-autostart.desktop.in
	man/Makefile
	modules/Makefile
	po/Makefile.in
])

