#!/usr/bin/env python

import sys
import os
import re
import subprocess
import logging, logging.handlers

DEFAULT_DEVICE_IP = "169.254.2.1"
DEFAULT_LOCAL_IP = "169.254.2.2"
DEFAULT_NETMASK = "255.255.255.0"
DEFAULT_BROADCAST = "169.254.2.255"

logger = None

#
# fall back to static config
#
def RunIfconfig(iface):

    logger.debug("attempting static ip configuration")
    cmd_list = ["ifconfig",iface,DEFAULT_LOCAL_IP,"netmask",DEFAULT_NETMASK,"broadcast",DEFAULT_BROADCAST]

    # returns a Popen object
    proc = subprocess.Popen(cmd_list, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    output_text = proc.communicate()[0]
    rc = proc.returncode

    #output_list = output_text.split('\n')
    #for line in output_list:
    #    print line

    if rc != 0:
        logger.debug("ifconfig failed with return code %d",rc)
        return False

    logger.debug("ifconfig succeeded")
    return DEFAULT_DEVICE_IP


#
# try to contact device's dhcp server
#
def RunDhclient(iface):

    logger.debug("attempting dynamic ip configuration")
    cmd_list = ["dhclient",iface]

    # returns a Popen object
    proc = subprocess.Popen(cmd_list, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    output_text = proc.communicate()[0]
    rc = proc.returncode

    if rc != 0:
        logger.debug("dhclient failed with return code %d",rc)
        return False

    output_list = output_text.split('\n')
    device_ip = False

    dhcp_ack_re = re.compile('DHCPACK from (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})')

    for line in output_list:
        logger.debug("dhclient output: "+line)

        match_obj = dhcp_ack_re.match(line)
        if match_obj != None:
            device_ip = match_obj.group(1)
            logger.debug("dhclient returned ip_address "+device_ip)
            return device_ip

    return device_ip


#
# run dccm after the interface is configured
#
def RunDccm(device_ip):

    logger.debug("starting hal-dccm ...")
    clist = ["hal-dccm","--rndis","--device-ip="+device_ip]

    proc = subprocess.Popen(cmd_list, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    return


#
# main()
#
if __name__ == '__main__':

    logging.basicConfig(level=logging.DEBUG,
                        format='%(asctime)s %(name)s %(levelname)s : %(message)s')
    logger = logging.getLogger("hal-synce-rndis")
    sys_log = logging.handlers.SysLogHandler("/dev/log", logging.handlers.SysLogHandler.LOG_LOCAL5)
    logger.addHandler(sys_log)

    if os.environ.has_key("HAL_PROP_NET_INTERFACE"):
        iface = os.environ["HAL_PROP_NET_INTERFACE"]
    else:
        logger.warning("Hal environment not set")
        sys.exit(1)

    logger.debug("attempting to configure interface "+iface)

    device_ip = RunDhclient(iface)
    if device_ip == False:
        logger.debug("error running dhclient, trying static config")

        device_ip = RunIfconfig(iface)
        if device_ip == False:
            logger.warning("failed to configure interface")
            sys.exit(1)

    logger.debug("successfully configured interface")

    RunDccm(device_ip)

    sys.exit(0)
