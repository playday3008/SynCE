
<chapter id="developers_manual">
  <title>Developer's Manual</title>

  <para>
  </para>

  <sect1>
    <title>Architecture</title>

    <para>This information is probably most useful for contributors
      and developers.</para>

    
    <sect2 id="the_dcc_application">
      <title>The DCCM application</title>

      <para>DCCM is named after the registered port name it listens
	to. See 
	<xref linkend="registered_ip_ports_used_by_synce"></xref> for
	details.</para>

      <para>This application listens on port 5679 for incomning
	connections from a Windows CE device. This connection remains
	as long as the connection icon is shown on the Windows CE
	device.</para>

      <para>When a device has connected and authenticated, the file
	~/synce/active_connection is written with information about
	the connected device. This file may look like this:</para>

      <programlisting>
# Modifications to this file will be lost next time a client connects to dccm

[dccm]
pid=18432

[device]
name=nisse
class=Palm PC2
hardware=Compaq iPAQ H3600
ip=192.168.131.201
port=1234
password=1234
key=36
      </programlisting>

      <para>DCCM is capable of running programs or scripts on certain
	events. The following events are currently used:</para>

      <itemizedlist>
	<listitem>
	  <para>start - DCCM has started</para></listitem>
	<listitem>
	  <para>start - DCCM has started</para></listitem>
	<listitem>
	  <para>stop - DCCM will stop</para></listitem>
	<listitem>
	  <para>connect - A device has connected and authenticated</para></listitem>
	<listitem>
	  <para>disconnect - A device has disconnected</para></listitem>
      </itemizedlist>

      <para>In order to receive these events, put your program,
	script, or symbolic link to one of those in the
	<filename>~synce/scripts/</filename> directory.</para>

      <para>See <xref linkend="dccm_protocol"/> for documention on the DCCM
	protocol.</para>
    </sect2>

    <sect2 id="the_librapi2_library"><title>The librapi2
	library</title>

      <para>Librapi2 is a library that implements RAPI, the Remote
	Application Programming Interface. The RAPI function calls are
	<ulink url="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/wcesdkr/htm/_wcesdk_CeRapiInit.asp">documented by Microsoft</ulink> but not the transport protocol. The '2' in "librapi2" is there because this is the second implementation. The original implementation is found in the <ulink url="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/synce/synce/client/librapi/">synce CVS module</ulink>.</para>

      <para>Librapi2 reads<filename>
	  ~/synce/active_connection</filename> file (see <xref
							       linkend="the_dcc_application"></xref>) 
	to get the device IP address and then connects to port 990 on
	the Windows CE device to make RAPI calls. This port is not
	registered by Microsoft. (Actually it is registered for Secure
	FTP!)</para>

      <para>All strings in RAPI calls are "encoded" as 2-byte UNICODE
	chars. Helper functions for converting to and from this string
	type is provided in libsynce <xref
					   linkend="the_libsynce_library"/>. 
	Librapi2 will handle conversions between big endian and little
	endian internally whenever possible.</para>

      <para>Librapi2 comes with a number of file management tools that
	provide useful example code in how to use the RAPI
	calls.</para>

      <para>There is a special page documenting the RAPI
	protocol.</para>
	
    </sect2>

    <sect2 id="the_libsynce_library"><title>The libsynce
	library</title>

      <para>Libsynce contains common functions needed by DCCM,
	Librapi2 and that also may be used by 3rd party
	applications:</para>

      <itemizedlist>
	<listitem>
	  <para>Logging functions (synce_log.h)</para></listitem>
	<listitem>
	  <para>TCP socket functions (synce_socket.h)</para></listitem>
	<listitem>
	  <para>Declaration of datatypes used on Microsoft Windows</para></listitem>
	<listitem>
	  <para>Conversion between WCHAR* and char* strings</para></listitem>
	<listitem>
	  <para>Conversion between FILETIME and time_t data types</para></listitem>
	<listitem>
	  <para>Conversion between big endian and little endian integers</para></listitem>
      </itemizedlist>

    </sect2>

    <sect2 id="synce_serial_scripts"><title>synce-serial
	scripts</title>

      <para><command>synce-serial-config</command></para>
      
      <para>This script simply writes the file
	<filename>/etc/ppp/peers/synce-device</filename> with a
	suitable configuration for use with SynCE.</para>

      <para><command>synce-serial-start</command></para>

      <para>This scripts checks that the usepeerdns option is not
	present in <filename>/etc/ppp/options</filename>, and then
	runs pppd call synce-device to allow the device to
	connect.</para>

      <para><command>synce-serial-abort</command></para>

      <para>This script brutally kills pppd if it is running.</para>
    </sect2>

    <sect2 id="registered_ip_ports_used_by_synce">
      <title>Registered IP ports used by SynCE</title>

      <para>Below are the port numbers registrered by Microsoft. SynCE
	only use the TCP ports.</para>
      <table>
	<title>SynCE port numbers</title>
	<tgroup cols="3" align='left' colsep='1' rowsep='1'>
	  <tbody>
	    <row>
	      <entry>rrac</entry>
	      <entry>5678/tcp</entry>
	      <entry>Remote Replication Agent Connection</entry>
	    </row>
	    <row>
	      <entry>rrac</entry>
	      <entry>5678/udp</entry>
	      <entry>Remote Replication Agent Connection</entry>
	    </row>
	    <row>
	      <entry>dccm</entry>
	      <entry>5679/tcp</entry>
	      <entry>Direct Cable Connect Manager</entry>
	    </row>
	    <row>
	      <entry>dccm</entry>
	      <entry>5679/udp</entry>
	      <entry>Direct Cable Connect Manager</entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry></entry>
	      <entry>Mark Miller
		<email>mmiller@MICROSOFT.com</email></entry>
	    </row>	      
	  </tbody>
	</tgroup>
      </table>
    </sect2>

    <sect2 id="dccm_protocol"><title>DCCM protocol</title>

      <para>
The Windows CE device (client) connects to port 5679 on the desktop computer (server). The client sends commands to the server, and the server send ping packages to which the client responds.</para>

      <para>TODO: more documentation here. In the mean time, look at the <ulink url="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/synce/dccmd/src/dccm.c?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup">source code</ulink> - its not much!</para>

    </sect2>
  </sect1>

  <sect1 id="using_the_rapi_libraries">
    <title>Using the rapi libraries</title>

    <para>
    </para>

  </sect1>

  <sect1 id="scripting_with_python">
    <title>Scripting with Python</title>

    <para>
    </para>

      <sect2 id="low_level_interface">
	<title>The Low Level Interface</title>
	<para></para>
      </sect2>
      <sect2 id="working_with_databases">
	<title>Working With Databases</title>
	<para></para>
      </sect2>
      <sect2 id="working_with_files">
	<title>Working With Files</title>
	<para></para>
      </sect2>
      <sect2 id="working_with_the_registery">
	<title>Working With The Registry</title>
	<para></para>
      </sect2>

  </sect1>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-doctype:("synce.xml")
sgml-parent-document:("synce.xml" "book" "chapter")
End:
-->