AC_INIT(configure.ac)
AM_INIT_AUTOMAKE(synce-hal, 0.1)
AM_CONFIG_HEADER(config.h)

AC_ISC_POSIX
CFLAGS=""
AC_SUBST(CFLAGS)
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AM_PROG_LIBTOOL

packagesrcdir=`cd $srcdir && pwd`

if test "x${prefix}" = "xNONE"; then
	PACKAGE_PREFIX=${ac_default_prefix}
else
	PACKAGE_PREFIX=$prefix
fi
AC_SUBST(PACKAGE_PREFIX)
dnl AC_DEFINE_UNQUOTED(PACKAGE_PREFIX,"$PACKAGE_PREFIX",[Prefix where package is installed])



dnl
dnl    Check for glib, D-BUS and HAL
dnl

PKG_CHECK_MODULES(GLIB, [glib-2.0 >= 2.2.0])
PKG_CHECK_MODULES(DBUS, [dbus-1 >= 0.31])
PKG_CHECK_MODULES(HAL, [hal >= 0.5.0])
AC_SUBST(HAL_LIBS)
AC_SUBST(HAL_CFLAGS)
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)



dnl
dnl   Check for libsynce
dnl

AM_PATH_LIBSYNCE
AM_PATH_LIBRAPI2


dnl
dnl   Check if verbose debugging has been requested
dnl

AC_ARG_ENABLE(verbose, AC_HELP_STRING([--enable-verbose],[verbose debugging output]),enable_verbose=$enableval,enable_verbose=no)
if test x$enable_verbose = xyes; then
	AC_DEFINE(ENABLE_VERBOSE,1,[Verbose debugging output])
fi



dnl
dnl   Check for dccm user
dnl

AC_ARG_WITH(synce-user, AC_HELP_STRING([--with-synce-user=USER],[user for running dccm (synce)]))
if ! test -z "$with_synce_user" ; then
	SYNCE_USER="${with_synce_user}"
else
	SYNCE_USER="synce"
fi
AC_SUBST(SYNCE_USER)
AC_DEFINE_UNQUOTED(SYNCE_USER,"$SYNCE_USER",["User for running dccm"])



dnl
dnl   Check for dccm group
dnl

AC_ARG_WITH(synce-group, AC_HELP_STRING([--with-synce-group=GROUP],[group for running dccm (synce)]))
if ! test -z "$with_synce_group" ; then
    SYNCE_GROUP="${with_synce_group}"
else
    SYNCE_GROUP="synce"
fi
AC_SUBST(SYNCE_GROUP)
AC_DEFINE_UNQUOTED(SYNCE_GROUP,"$SYNCE_GROUP",["Group for running dccm"])



dnl
dnl   Full path to dccm
dnl

AC_ARG_WITH(dccm, AC_HELP_STRING([--with-dccm=PATH],[command to run dccm (autodetected)]))
if ! test -z "$with_dccm" ; then
    DCCM_CMD="${with_dccm}"
else
    DCCM_CMD=`which dccm`
    if test "x$DCCM_CMD" = "x"; then
        AC_ERROR("dccm not found. Please make sure dccm is installed and is in your PATH.")
    fi
fi
AC_SUBST(DCCM_CMD)
AC_DEFINE_UNQUOTED(DCCM_CMD,"$DCCM_CMD",["Full path to dccm"])



dnl
dnl   Full path to synce-serial-chat
dnl

AC_ARG_WITH(synce-serial-chat, AC_HELP_STRING([--with-synce-serial-chat=PATH],dnl
			[synce-serial-chat path (autodetected)]))
if ! test -z "$with_synce_serial_chat" ; then
	SYNCE_SERIAL_CHAT="${with_synce_serial_chat}"
else
	SYNCE_SERIAL_CHAT=`which synce-serial-chat`
    if test "x$SYNCE_SERIAL_CHAT" = "x"; then
        AC_ERROR("synce-serial-chat not found. Please make sure synce-serial is installed.")
    fi
fi
AC_SUBST(SYNCE_SERIAL_CHAT)
AC_DEFINE_UNQUOTED(SYNCE_SERIAL_CHAT,"$SYNCE_SERIAL_CHAT",["Full path to synce-serial-chat"])



dnl
dnl    Directory for SynCE connection information
dnl

AC_ARG_WITH(synce-connection-dir, AC_HELP_STRING([--with-synce-connection-dir=PATH],dnl
			[directory to store connection info (LOCALSTATEDIR/run/synce)]))
if ! test -z "$with_synce_connection_dir" ; then
	SYNCE_CONNECTION_DIR="`echo ${with_synce_connection_dir} | sed -r -e 's/\/+/\//g' | sed -r -e 's/\/+$//g'`"
else
	SYNCE_CONNECTION_DIR="`echo ${localstatedir}/run/synce | sed -r -e 's/\/+/\//g' | sed -r -e 's/\/+$//g'`"
fi
AC_SUBST(SYNCE_CONNECTION_DIR)
AC_DEFINE_UNQUOTED(SYNCE_CONNECTION_DIR,"$SYNCE_CONNECTION_DIR",["Directory for SynCE connection info"])



dnl
dnl    HAL installation prefix; addons and fdi dirs
dnl

AC_ARG_WITH(hal, AC_HELP_STRING([--with-hal=PREFIX],[prefix where HAL is installed (same as PREFIX)]))
if ! test -z "$with_hal" ; then
    HAL_PREFIX="${with_hal}"
else
    HAL_PREFIX="$PACKAGE_PREFIX"
fi
HAL_ADDONS_DIR="`echo $HAL_PREFIX/libexec | sed -r -e 's/\/+/\//g'`"
AC_SUBST(HAL_ADDONS_DIR)
HAL_FDI_DIR="$HAL_PREFIX/share/hal/fdi/information/20thirdparty"
AC_SUBST(HAL_FDI_DIR)
HAL_POLICY_DIR="$HAL_PREFIX/share/hal/fdi/policy/20thirdparty"
AC_SUBST(HAL_POLICY_DIR)




AC_OUTPUT([
Makefile
src/Makefile
fdi/Makefile
])

echo ""
echo "synce-hal configuration summary:"
echo ""
echo "verbose debugging output:                     ${enable_verbose}"
echo "installation prefix:                          $PACKAGE_PREFIX"
echo "user for running dccm:                        $SYNCE_USER"
echo "group for running dccm:                       $SYNCE_GROUP"
echo "command to run dccm:                          $DCCM_CMD"
echo "synce-serial-chat:                            $SYNCE_SERIAL_CHAT"
echo "synce runtime data directory:                 $SYNCE_CONNECTION_DIR"
echo ""
